{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport {genkit} from 'genkit';\nimport { googleAI } from '@genkit-ai/googleai';\n\n/**\n * Initializes and configures the Genkit AI instance for the application.\n */\nexport const ai = genkit({\n  plugins: [\n    googleAI({\n      apiVersion: ['v1beta'],\n    }),\n  ],\n});\n"],"names":[],"mappings":";;;AACA;AAAA;AACA;AAAA;;;AAKO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;YACP,YAAY;gBAAC;aAAS;QACxB;KACD;AACH","debugId":null}},
    {"offset": {"line": 231, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/analyze-transaction-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview An AI flow to analyze financial transactions for fraud risk.\n *\n * - analyzeTransaction - A function that assesses the risk of a transaction.\n * - AnalyzeTransactionInput - The input type for the analyzeTransaction function.\n * - AnalyzeTransactionOutput - The return type for the analyzeTransaction function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { googleAI } from '@genkit-ai/googleai';\nimport { z } from 'zod';\n\nconst AnalyzeTransactionInputSchema = z.object({\n  amount: z.number().describe('The amount of the transaction.'),\n  recipient: z.string().describe('The recipient of the transaction (email or account number).'),\n  recentTransactions: z\n    .string()\n    .describe('A JSON string representing the user\\'s last 10 transactions.'),\n});\nexport type AnalyzeTransactionInput = z.infer<typeof AnalyzeTransactionInputSchema>;\n\nconst AnalyzeTransactionOutputSchema = z.object({\n  risk: z\n    .enum(['low', 'medium', 'high'])\n    .describe('The assessed risk level of the transaction.'),\n  reason: z\n    .string()\n    .describe('A brief justification for the assessed risk level.'),\n});\nexport type AnalyzeTransactionOutput = z.infer<typeof AnalyzeTransactionOutputSchema>;\n\nexport async function analyzeTransaction(input: AnalyzeTransactionInput): Promise<AnalyzeTransactionOutput> {\n  return analyzeTransactionFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'analyzeTransactionPrompt',\n  model: googleAI.model('gemini-1.5-flash-latest'),\n  input: { schema: AnalyzeTransactionInputSchema },\n  output: { schema: AnalyzeTransactionOutputSchema },\n  prompt: `You are a fraud detection specialist for a bank. Your task is to analyze a proposed transaction and assess its risk level based on the user's recent activity.\n\nConsider the following factors:\n- Is the amount unusually large compared to other recent transactions?\n- Is the recipient new? (i.e., not present in recent transaction history)\n- Does the transaction fit the user's typical spending pattern?\n- Time of day can also be a factor, but we don't have that data, so focus on amount and recipient.\n\nBased on your analysis of the new transaction in the context of the user's history, determine if the risk is \"low\", \"medium\", or \"high\", and provide a concise, one-sentence reason for your decision.\n\n**User's Recent Transactions:**\n\\`\\`\\`json\n{{{recentTransactions}}}\n\\`\\`\\`\n\n**New Transaction to Analyze:**\n- Amount: {{{amount}}}\n- Recipient: {{{recipient}}}\n\nPlease provide your risk assessment in the specified JSON format.`,\n});\n\nconst analyzeTransactionFlow = ai.defineFlow(\n  {\n    name: 'analyzeTransactionFlow',\n    inputSchema: AnalyzeTransactionInputSchema,\n    outputSchema: AnalyzeTransactionOutputSchema,\n  },\n  async (input) => {\n    const { output } = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;AACA;;;;;;;AAEA,MAAM,gCAAgC,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,QAAQ,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,oBAAoB,oIAAA,CAAA,IAAC,CAClB,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,iCAAiC,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,MAAM,oIAAA,CAAA,IAAC,CACJ,IAAI,CAAC;QAAC;QAAO;QAAU;KAAO,EAC9B,QAAQ,CAAC;IACZ,QAAQ,oIAAA,CAAA,IAAC,CACN,MAAM,GACN,QAAQ,CAAC;AACd;AAGO,eAAe,mBAAmB,KAA8B;IACrE,OAAO,uBAAuB;AAChC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO,2KAAA,CAAA,WAAQ,CAAC,KAAK,CAAC;IACtB,OAAO;QAAE,QAAQ;IAA8B;IAC/C,QAAQ;QAAE,QAAQ;IAA+B;IACjD,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;iEAmBsD,CAAC;AAClE;AAEA,MAAM,yBAAyB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC1C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,OAAO;IAChC,OAAO;AACT;;;IAxCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28authed%29/qr-pay/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {analyzeTransaction as '40d99e467e059c9b8ae5f13dc48459e8427ebf9203'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28authed%29/qr-pay/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(authed)/qr-pay/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(authed)/qr-pay/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoS,GACjU,kEACA","debugId":null}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28authed%29/qr-pay/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(authed)/qr-pay/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(authed)/qr-pay/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA","debugId":null}},
    {"offset": {"line": 403, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}
{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/flag-fraudulent-transactions.ts"],"sourcesContent":["// This is an autogenerated file from Firebase Studio.\n\n'use server';\n\n/**\n * @fileOverview AI-powered fraud transaction detection.\n *\n * - flagFraudulentTransactions - Analyzes recent transactions to detect and flag unusual activity.\n * - FlagFraudulentTransactionsInput - The input type for the flagFraudulentTransactions function.\n * - FlagFraudulentTransactionsOutput - The return type for the flagFraudulentTransactions function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst TransactionSchema = z.object({\n  transactionId: z.string().describe('Unique identifier for the transaction.'),\n  accountId: z.string().describe('Account ID associated with the transaction.'),\n  timestamp: z.string().describe('Timestamp of the transaction (ISO format).'),\n  amount: z.number().describe('Transaction amount.'),\n  description: z.string().describe('Description of the transaction.'),\n});\n\nconst FlagFraudulentTransactionsInputSchema = z.object({\n  transactions: z.array(TransactionSchema).describe('Array of recent transactions.'),\n});\nexport type FlagFraudulentTransactionsInput = z.infer<\n  typeof FlagFraudulentTransactionsInputSchema\n>;\n\nconst FlagFraudulentTransactionsOutputSchema = z.object({\n  flaggedTransactions: z\n    .array(z.string())\n    .describe('Array of transaction IDs flagged as potentially fraudulent.'),\n  explanation: z.string().describe('Explanation of why these transactions were flagged.'),\n});\nexport type FlagFraudulentTransactionsOutput = z.infer<\n  typeof FlagFraudulentTransactionsOutputSchema\n>;\n\nexport async function flagFraudulentTransactions(\n  input: FlagFraudulentTransactionsInput\n): Promise<FlagFraudulentTransactionsOutput> {\n  return flagFraudulentTransactionsFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'flagFraudulentTransactionsPrompt',\n  input: {\n    schema: FlagFraudulentTransactionsInputSchema,\n  },\n  output: {\n    schema: FlagFraudulentTransactionsOutputSchema,\n  },\n  prompt: `You are a fraud detection expert analyzing banking transactions.\n\n  Analyze the following recent transactions and identify any that are potentially fraudulent.\n  Return the transaction IDs of any flagged transactions and an explanation of why they were flagged.\n\n  Transactions:\n  {{#each transactions}}\n  Transaction ID: {{{transactionId}}}\n  Account ID: {{{accountId}}}\n  Timestamp: {{{timestamp}}}\n  Amount: {{{amount}}}\n  Description: {{{description}}}\n  {{/each}}\n\n  If no transactions are fraudulent, return an empty array for flaggedTransactions.\n`,\n});\n\nconst flagFraudulentTransactionsFlow = ai.defineFlow(\n  {\n    name: 'flagFraudulentTransactionsFlow',\n    inputSchema: FlagFraudulentTransactionsInputSchema,\n    outputSchema: FlagFraudulentTransactionsOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,sDAAsD;;;;;;AAItD;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjC,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACnC,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC/B,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC5B,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAEA,MAAM,wCAAwC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrD,cAAc,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,mBAAmB,QAAQ,CAAC;AACpD;AAKA,MAAM,yCAAyC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACtD,qBAAqB,uIAAA,CAAA,IAAC,CACnB,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;IACZ,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAKO,eAAe,2BACpB,KAAsC;IAEtC,OAAO,+BAA+B;AACxC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QACL,QAAQ;IACV;IACA,QAAQ;QACN,QAAQ;IACV;IACA,QAAQ,CAAC;;;;;;;;;;;;;;;AAeX,CAAC;AACD;AAEA,MAAM,iCAAiC,mHAAA,CAAA,KAAE,CAAC,UAAU,CAClD;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IAzCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {flagFraudulentTransactions as '4067fd536dced9ad169dfcfe501dc411abef087f2c'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 375, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 389, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Rules for the 'accounts' collection
    match /accounts/{userId} {
      // Users can create their own account document
      allow create: if isAuthenticated() && request.auth.uid == userId;

      // Users can only read their own account document
      allow get: if isAuthenticated() && request.auth.uid == userId;

      // Users can only update their own account balance
      // Other fields like holderName should not be changed by the client
      allow update: if isAuthenticated() && request.auth.uid == userId
                    && request.resource.data.keys().hasOnly(['balance']);
                    
      // Disallow client-side deletion of accounts
      allow delete: if false;

      // Allow users to list accounts if they are querying by holderName (email)
      // This is necessary for the "send money" feature to find a recipient
      allow list: if isAuthenticated();
    }

    // Rules for the 'transactions' collection
    match /transactions/{transactionId} {
      // Allow users to create transactions for themselves (withdrawals)
      // OR for another user (deposits as part of a transfer)
      allow create: if isAuthenticated();

      // Users can only read their own transaction documents
      // This rule uses a 'get' on the path to check the accountId of the document being read.
      allow get: if isAuthenticated() && request.auth.uid == get(/databases/$(database)/documents/transactions/$(transactionId)).data.accountId;

      // Users can only list transactions belonging to their own account
      allow list: if isAuthenticated() && request.auth.uid == request.query.where.accountId;

      // Disallow client-side updates and deletions of transactions
      allow update, delete: if false;
    }

    // Rules for the 'notifications' collection
    match /notifications/{notificationId} {
       // Allow creation of notifications. This will be triggered by server-side logic (transactions) or admin actions.
      allow create: if isAuthenticated();

      // Users can only read their own notification documents
      allow get: if isAuthenticated() && request.auth.uid == get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId;

      // Users can only list notifications belonging to them
      allow list: if isAuthenticated() && request.auth.uid == request.query.where.userId;

      // Users can update their own notifications (e.g., to mark them as read)
      allow update: if isAuthenticated() && request.auth.uid == get(/databases/$(database)/documents/notifications/$(notificationId)).data.userId
                    && request.resource.data.keys().hasOnly(['isRead']);

      // Disallow client-side deletion of notifications
      allow delete: if false;
    }
  }
}

rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // ACCOUNTS:
    // - Users can create their own account document.
    // - Users can read and update their own account document.
    // - Authenticated users can read other users' accounts (e.g., to find a recipient).
    match /accounts/{userId} {
      allow create: if isAuthenticated() && isOwner(userId);
      allow read, update: if isAuthenticated() && isOwner(userId);
      allow list: if isAuthenticated(); // Allow querying for recipients
    }

    // TRANSACTIONS:
    // - Users can create transactions for themselves (e.g., expenses, deposits from transfers).
    // - Users can only read transactions where their accountId matches their own user ID.
    match /transactions/{transactionId} {
      allow create: if isAuthenticated();
      allow list: if isAuthenticated() && request.query.where.get('accountId') == request.auth.uid;
      allow read: if isAuthenticated() && resource.data.accountId == request.auth.uid;
    }

    // NOTIFICATIONS:
    // - Users can create notifications for themselves or others (e.g., transfer alerts).
    // - Users can only read notifications where their userId matches their own user ID.
    match /notifications/{notificationId} {
      allow create: if isAuthenticated();
      allow list: if isAuthenticated() && request.query.where.get('userId') == request.auth.uid;
      allow read, update: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
  }
}

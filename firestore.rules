
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the user is authenticated
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the resource
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'accounts' collection
    match /accounts/{userId} {
      // A user can read their own account document.
      allow read: if isSignedIn() && isOwner(userId);

      // A user can create their own account document, but not overwrite an existing one.
      allow create: if isSignedIn() && isOwner(userId);
      
      // A user can update their own account (e.g., their balance).
      // The logic for transferring funds to another user happens within a Firestore Transaction,
      // but the rules are still evaluated. In a real-world app, this would be handled
      // by a Cloud Function for better security, but for this simulation, we allow
      // any signed-in user to update an account, relying on the Transaction's all-or-nothing nature.
      allow update: if isSignedIn();

      // Accounts cannot be deleted.
      allow delete: if false;
    }

    // Rules for the 'transactions' collection
    match /transactions/{transactionId} {
      // A user can read their own transaction documents.
      allow get: if isSignedIn() && isOwner(resource.data.accountId);
      
      // A user can query for a list of their own transactions.
      allow list: if isSignedIn() && isOwner(request.query.get("accountId"));

      // A user can create a new transaction for themselves.
      allow create: if isSignedIn() && isOwner(request.resource.data.accountId);

      // Transactions are immutable.
      allow update, delete: if false;
    }

    // Rules for the 'notifications' collection
    match /notifications/{notificationId} {
       // A user can read their own notification documents.
      allow get: if isSignedIn() && isOwner(resource.data.userId);

      // A user can query for a list of their own notifications.
      allow list: if isSignedIn() && isOwner(request.query.get("userId"));
      
      // A user can update their own notifications (e.g., mark as read).
      allow update: if isSignedIn() && isOwner(resource.data.userId);

      // Notifications can be created for a user by the system (e.g., via a transaction).
      allow create: if isSignedIn();

      // Users cannot delete their notifications.
      allow delete: if false;
    }
  }
}

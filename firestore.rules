
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Anyone can read from this collection.
    // In a real app, you would want to restrict this.
    function canReadPublicData() {
      return true;
    }

    // A user must be signed-in to do this.
    function isSignedIn() {
      return request.auth != null;
    }

    // A user can only affect their own documents.
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Rules for the 'accounts' collection.
    match /accounts/{userId} {
      // A user can create their own account document.
      allow create: if isSignedIn() && isOwner(userId);
      
      // A user can read their own account document.
      // Any signed-in user can query the accounts collection to find a recipient.
      allow get: if isSignedIn() && isOwner(userId);
      allow list: if isSignedIn();

      // A user can update their own account balance.
      // This is also used by the transaction logic to update the recipient's balance.
      allow update: if isSignedIn();
    }

    // Rules for the 'transactions' collection.
    match /transactions/{transactionId} {
      // Allow read access to transactions if the user is the owner of the account associated with the transaction.
      // This is checked by querying on 'accountId'.
      allow read: if isSignedIn() && isOwner(request.query.accountId);

      // A user can create a transaction document if they are signed in.
      // The logic in use-account.ts handles the security of who can create what.
      allow create: if isSignedIn();
    }

    // Rules for the 'notifications' collection.
    match /notifications/{notificationId} {
        // Allow read access if the query is filtering by the user's own ID.
        allow read: if isSignedIn() && isOwner(request.query.userId);

        // A user can create a notification if they are signed in.
        allow create: if isSignedIn();
        
        // A user can update their own notifications (e.g., to mark as read).
        allow update: if isSignedIn() && isOwner(resource.data.userId);
    }
  }
}

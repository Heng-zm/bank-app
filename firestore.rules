
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    match /accounts/{userId} {
      allow read, write: if isSignedIn() && request.auth.uid == userId;
      allow list: if isSignedIn();
    }

    match /transactions/{transactionId} {
      // A user can only create a transaction for themselves.
      allow create: if isSignedIn() && request.resource.data.accountId == request.auth.uid;

      // A user can read a transaction if they are the owner.
      allow get: if isSignedIn() && resource.data.accountId == request.auth.uid;

      // A user can query transactions only if the query is scoped to their own accountId.
      allow list: if isSignedIn() && request.query.where.accountId == request.auth.uid;
      
      // Transactions are immutable.
      allow update, delete: if false;
    }

    match /notifications/{notificationId} {
      // Any authenticated user can create a notification (e.g., for transfers).
      // Your app logic must ensure the correct userId is set.
      allow create: if isSignedIn();
      
      // A user can read, update, or delete a notification if they are the recipient.
      allow get, update, delete: if isSignedIn() && resource.data.userId == request.auth.uid;
      
      // A user can query notifications only if the query is scoped to their own userId.
      allow list: if isSignedIn() && request.query.where.userId == request.auth.uid;
    }
  }
}
